[["index.html", "The National Hydrography Dataset in the St. Vrain Creek Watershed Chapter 1 Introduction 1.1 Project Goals 1.2 Project Outline", " The National Hydrography Dataset in the St. Vrain Creek Watershed Lauren Herbine 4/27/2021 Chapter 1 Introduction St. Vrain Pic 1.1 Project Goals The main objective of this project is to demonstrate some of the skills I have learned in Computational Tools for Reproducible Science. I am using this opportunity to dig a little deeper into the NHD+ HR database and look at a watershed (the St. Vrain) that is within my study area- the Mississippi River Basin. This is by no means supposed to be rigorous analytical work. 1.2 Project Outline This book is composed of the following additional chapters: Chapter 2: Background Chapter 3: Database creation Chapter 4: Basin Morphometric visulizations Chapter 5: Analysis by EcoRegion Chapter 6: Summary "],["background.html", "Chapter 2 Background 2.1 The St. Vrain Watershed 2.2 What is NHDPlus HR?", " Chapter 2 Background 2.1 The St. Vrain Watershed The St. Vrain Watershed (HUC level 8) is located in Northern Colorado along the front range and encompasses the town of Longmont. This system brings snowmelt from the peaks of the Central Rockies (12,000-14,000+) to the South Platte over the course of 64.2 miles. The South Platte then transports water through the the Great Plains to the Platte, which drains into the Missouri. Eventually the snow that falls at some of the highest elevations in the continental U.S. makes its way from the Missouri to the Mississippi, and finally into the Gulf of Mexico! This system becomes progressively urbanized as it flows out of the Rockies. In its headwater reaches, the North St. Vrain is within Park Service and Forest Service land and by the time it becomes the St. Vrain, it is solidly within private/city owned land. 2.2 What is NHDPlus HR? From the USGS The St. Vrain Creek Watershed displayed as upstream drainage area (square km) from the NHD+ dataset The High Resolution National Hydrography Dataset Plus (NHDPlus HR) is an integrated set of geospatial data layers, including the best available National Hydrography Dataset (NHD), the 10-meter 3D Elevation Program Digital Elevation Model (3DEP DEM), and the National Watershed Boundary Dataset (WBD). The NHDPlus HR combines the NHD, 3DEP DEMs, and WBD to create a stream network with linear referencing, feature naming,value added attributes\" (VAAs), elevation-derived catchments, and other features for hydrologic data analysis. The stream network with linear referencing is a system of data relationships applied to hydrographic systems so that one stream reach flows into another and events can be tied to and traced along the network. The VAAs provide capabilities for upstream and downstream navigation with linear referencing, analysis, and modeling. The elevation derived catchments are used to associate other landscape attributes, such as land cover, with stream segments.\" "],["database-creation.html", "Chapter 3 Database Creation 3.1 Building the database 3.2 Establish a database connection 3.3 Retreiving the data 3.4 Table creation 3.5 Loading the data", " Chapter 3 Database Creation 3.1 Building the database Load the packages necessary: library(DBI) library(tidyverse) ## -- Attaching packages --------------------------------------- tidyverse 1.3.1 -- ## v ggplot2 3.3.3 v purrr 0.3.4 ## v tibble 3.1.0 v dplyr 1.0.5 ## v tidyr 1.1.3 v stringr 1.4.0 ## v readr 1.4.0 v forcats 0.5.1 ## -- Conflicts ------------------------------------------ tidyverse_conflicts() -- ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(viridis) ## Loading required package: viridisLite library(patchwork) library(lubridate) ## ## Attaching package: &#39;lubridate&#39; ## The following objects are masked from &#39;package:base&#39;: ## ## date, intersect, setdiff, union library(ggplot2) library(ggridges) library(RSQLite) 3.2 Establish a database connection This will also create a new database St.Vrain_db &lt;- dbConnect(RSQLite::SQLite(), &quot;St.Vrain.db&quot;) I now have a database called St.Vrain.db ready for tables and data. 3.3 Retreiving the data To begin creating this database, I first downloaded the Riverscapes Context project for the St. Vrain Creek HUC level 8 (10190005). The NHD+ geodatabase is nested in here, but since I was already using it in ArcMap, it was easy for me to simply export the attribute table to excel. If I was doing this strictly following reproducible standards, I am sure there would be a way to code through all of those steps! This attribute table contains the following headers: FID Permanent_ FDate GNIS_ID GNIS_Name LengthKM ReachCode FlowDir WBArea_Per FType FCode MainPath InNetwork Visibility Shape_Leng NHDPlusID VPUID Enabled AreasqKM TotDAsqKm Slope MaxElevSmo MinElevSmo BFwidth However, I am only interested in the following: FID (reaches numbered from 0 to 10753) LengthKM (the length of each reach in kilometers) InNetwork (this tells me if the reach is in the actual stream network, or if it is a human made connector (i.e. a canal or gravel pond)) TotDASqKm (tells me the total drainage area of that reach in square kilometers) Slope (slope of that reach) MaxElevSmo (maximum elevation in feet of that reach) MinElevSmo (minimum elevation in feet of that reach) BFwidth (the average bankfull width of that reach) There is code (that we talked about in class, I know!) that will allow me to load only the columns I want into my table. For this assignment, however, I mannually deleted the columns that I did not want in excel, and then saved as a CSV file. 3.4 Table creation To create the table reach_attributes dbExecute(St.Vrain_db, &quot;CREATE TABLE reach_attributes ( FID float, LengthKM float, InNetwork float, TotDASqKm float, Slope float, MaxElevSmo float, MInElevSmo float, BFwidth float );&quot;) 3.5 Loading the data To load the data from the CSV into the table: reach_attributes &lt;- read.csv(&quot;NHD_US_drainage.csv&quot;, stringsAsFactors = FALSE) dbWriteTable(St.Vrain_db, &quot;reach_attributes&quot;, reach_attributes, append = TRUE) "],["basin-morphometric-visualizations.html", "Chapter 4 Basin Morphometric Visualizations 4.1 A little data prep 4.2 Bankfull width, elevation, and total upstream drainage area", " Chapter 4 Basin Morphometric Visualizations 4.1 A little data prep First I want to work only with stream segments that are in network, meaning they arent man made diversions or channels. In the data, this is signaled by assigning a 1 instead of a 0. I also want to get rid of a couple of reaches that were assigned elevations of -9998. I do this by filtering for a maximum elevation of greater than 0. MaxElevSmo and MinElevSmo refer to elevations that are smoothed (as opposed to raw). They are in centimeters, which I dont think is very intuitive to work with, so I am going to transform them into meters. reach_attributes %&gt;% filter(InNetwork == 1 &amp; MaxElevSmo &gt; 0) %&gt;% mutate(max_elev = MaxElevSmo/100) %&gt;% mutate(min_elev = MInElevSmo/100) %&gt;% select(FID, LengthKM, TotDASqKm, Slope, BFwidth, max_elev, min_elev) %&gt;% slice_sample(n=10) %&gt;% knitr::kable(align = &quot;c&quot;) FID LengthKM TotDASqKm Slope BFwidth max_elev min_elev 9066 0.284000 0.5572 0.0228521 0.8688335 3363.62 3357.13 6568 0.312000 0.0507 0.0678302 0.3354735 1802.26 1787.88 3462 0.357000 0.0448 0.4150195 0.3193945 2520.26 2413.60 3232 0.426000 0.0882 0.1442025 0.4179470 2031.59 1984.58 7809 0.190723 0.0398 0.1505681 0.3047360 2553.10 2539.44 935 0.190000 0.0951 0.3624737 0.4306335 2490.64 2421.77 7743 1.173000 7.7956 0.0615771 2.4764776 3259.21 3186.98 3507 0.470000 23.0032 0.0288085 3.8053978 2485.46 2471.92 8439 0.129000 1.4617 0.0078295 1.2741450 3057.07 3056.06 5539 0.030000 0.7882 0.0620000 0.9970910 1836.05 1834.19 4.2 Bankfull width, elevation, and total upstream drainage area How does the distribution of bankfull widths (the width of the channel just before it reaches overbank stage) change as one moves down the catchment? And just for kicks, does total upstream drainage area follow the same trend? 4.2.1 Bankful width vs. elevation with total upstream drainage area thrown in for some visual spice reach_attributes %&gt;% filter(InNetwork == 1 &amp; MaxElevSmo &gt; 0 &amp; BFwidth &lt; 30) %&gt;% mutate(max_elev = MaxElevSmo/100) %&gt;% mutate(min_elev = MInElevSmo/100) %&gt;% ggplot() + geom_point(aes(y = max_elev, x = BFwidth, color = TotDASqKm, size = TotDASqKm)) + guides(color = guide_legend(), size = guide_legend()) + theme_minimal() + labs(fill = &#39;Total Upstream Drainage Area (sqKm)&#39;, y = &#39;Max Elevation (m)&#39;, x = &#39;Bankfull Width (m)&#39;, color = &#39;Total Upstream Drainage Area (sqKm)&#39;, size = &#39;Total Upstream Drainage Area (sqKm)&#39;) + scale_color_viridis(option = &quot;viridis&quot;) + theme_minimal() + theme(legend.position = &quot;bottom&quot;) As seen in the figure above, bankfull width increases as elevation decreases, which is to be expected. High elevation headwater reaches will generally be narrow, sometimes intermittent channels. As one moves down the catchment and these headwater reaches become 2nd, 3rd, 4th order and higher streams, their bankfull widths will widen to accomodate the increasing water volume. It is important to note that there are small channels at all elevations (the thick band of data points on the left of the graph spanning elevations from &lt;1500 m to &gt;4000 m), but that wider channels only occur at decreasingly lower elevations. Some interesting things to note: The highest elevation bankfull width is not the narrowest bankfull width As expected, total upstream drainage area increases as elevation decreases As expected, total upstream drainage area increases as bankfull width increases (also see below graph) This figure is similar to an elevation profile of all of the streams within the catchment, with bankfull width replacing distance downstream. Though not a direct correlation, this is because most channels are wider the further down a catchment you get (refer back to the observation about small channels being present at all elevations, though). 4.2.2 Bankfull width vs. total upstream drainage area reach_attributes %&gt;% filter(InNetwork == 1 &amp; MaxElevSmo &gt; 0 &amp; BFwidth &lt; 30) %&gt;% mutate(max_elev = MaxElevSmo/100) %&gt;% mutate(min_elev = MInElevSmo/100) %&gt;% ggplot() + geom_point(aes(y = TotDASqKm, x = BFwidth, color = max_elev,)) + labs(fill = &#39;Total Upstream Drainage Area (sqKm)&#39;, y = &#39;Total Upstream Drainage Area (sqKm)&#39;, x = &#39;Bankfull Width (m)&#39;, color = &#39;Maximum elevation of reach&#39;) + scale_color_viridis() + guides(color = guide_legend()) + theme_minimal() + theme(legend.position = &quot;bottom&quot;) The perfect correlation seen here could be due to a calculation method used by NHD+ to determine total upstream drainage area. This seems too perfect. "],["analysis-by-ecoregion.html", "Chapter 5 Analysis by EcoRegion 5.1 EcoRegions by elevation", " Chapter 5 Analysis by EcoRegion 5.1 EcoRegions by elevation I want to break out my data by these EcoRegions. To do this I have determined the approximate, average elevation at each boundary. I mutate the table to give me an ecoregions column: reach_attributes %&gt;% filter(InNetwork == 1 &amp; MaxElevSmo &gt; 0) %&gt;% mutate(max_elev = MaxElevSmo/100) %&gt;% mutate(min_elev = MInElevSmo/100) %&gt;% mutate(ecoregion = case_when(max_elev &gt; 3048 ~ &quot;Alpine&quot;, max_elev &lt;= 3048 &amp; max_elev &gt; 2804 ~ &quot;Subalpine Forest&quot;, max_elev &lt;= 2804 &amp; max_elev &gt; 2072 ~ &quot;Mid-Elevation Forest&quot;, max_elev &lt;= 2072 &amp; max_elev &gt; 1706 ~ &quot;Foothill Shrub&quot;, max_elev &lt;=1706 &amp; max_elev &gt; 1524 ~ &quot;Front Range Fans&quot;, max_elev &lt;= 1524 ~ &quot;Plains&quot;)) %&gt;% select(FID, max_elev, ecoregion) %&gt;% slice_sample(n=10) %&gt;% knitr::kable(align = &quot;c&quot;) FID max_elev ecoregion 9514 2338.80 Mid-Elevation Forest 1708 2543.09 Mid-Elevation Forest 2385 1966.45 Foothill Shrub 4316 2220.55 Mid-Elevation Forest 3456 2557.98 Mid-Elevation Forest 5423 2745.84 Mid-Elevation Forest 191 2623.49 Mid-Elevation Forest 10678 2503.06 Mid-Elevation Forest 8899 3359.92 Alpine 4456 1451.54 Plains 5.1.1 Slope vs. Bankfull width How do slope and bankfull width relate? I have filtered out slopes less than 0 and greater than 9 to reduce the noise. reach_attributes %&gt;% filter(InNetwork == 1 &amp; MaxElevSmo &gt; 0 &amp; Slope &gt; 0 &amp; Slope &lt; 9) %&gt;% mutate(max_elev = MaxElevSmo/100) %&gt;% mutate(min_elev = MInElevSmo/100) %&gt;% mutate(ecoregion = case_when(max_elev &gt; 3048 ~ &quot;Alpine&quot;, max_elev &lt;= 3048 &amp; max_elev &gt; 2804 ~ &quot;Subalpine Forest&quot;, max_elev &lt;= 2804 &amp; max_elev &gt; 2072 ~ &quot;Mid-Elevation Forest&quot;, max_elev &lt;= 2072 &amp; max_elev &gt; 1706 ~ &quot;Foothill Shrub&quot;, max_elev &lt;=1706 &amp; max_elev &gt; 1524 ~ &quot;Front Range Fans&quot;, max_elev &lt;= 1524 ~ &quot;Plains&quot;)) %&gt;% ggplot(aes(x = BFwidth, y = Slope, color = ecoregion)) + geom_point() + scale_fill_viridis_d() + theme_minimal() + labs(y = &quot;Slope&quot;, x = &quot;Bankfull width (m)&quot;, color = &quot;EcoRegion&quot;) + theme(legend.position = &quot;bottom&quot;) It doesnt make a lot of sense for a river to suddenly jump from a bankfull width of ~ 24 ft to ~46 ft. This could be due to the fact that many of the reaches in the urbanized and heavily manipulated lower regions of the watershed are considered out of network and therefore have been filtered out. For the purposes of this project, I further filter out those largest bankfull widths: reach_attributes %&gt;% filter(InNetwork == 1 &amp; MaxElevSmo &gt; 0 &amp; Slope &gt; 0 &amp; Slope &lt; 9 &amp; BFwidth &lt; 25) %&gt;% mutate(max_elev = MaxElevSmo/100) %&gt;% mutate(min_elev = MInElevSmo/100) %&gt;% mutate(ecoregion = case_when(max_elev &gt; 3048 ~ &quot;Alpine&quot;, max_elev &lt;= 3048 &amp; max_elev &gt; 2804 ~ &quot;Subalpine Forest&quot;, max_elev &lt;= 2804 &amp; max_elev &gt; 2072 ~ &quot;Mid-Elevation Forest&quot;, max_elev &lt;= 2072 &amp; max_elev &gt; 1706 ~ &quot;Foothill Shrub&quot;, max_elev &lt;=1706 &amp; max_elev &gt; 1524 ~ &quot;Front Range Fans&quot;, max_elev &lt;= 1524 ~ &quot;Plains&quot;)) %&gt;% ggplot(aes(x = BFwidth, y = Slope, color = ecoregion)) + geom_point() + scale_fill_viridis_d() + theme_minimal() + labs(y = &quot;Slope&quot;, x = &quot;Bankfull width (m)&quot;, color = &quot;EcoRegion&quot;) + theme(legend.position = &quot;bottom&quot;) Though they are different colors, it is kind of hard to tell what is going on between the ecoregions, so I am going to pull each region out into its own plot: reach_attributes %&gt;% filter(InNetwork == 1 &amp; MaxElevSmo &gt; 0 &amp; Slope &gt; 0 &amp; Slope &lt; 9 &amp; BFwidth &lt; 25) %&gt;% mutate(max_elev = MaxElevSmo/100) %&gt;% mutate(min_elev = MInElevSmo/100) %&gt;% mutate(ecoregion = case_when(max_elev &gt; 3048 ~ &quot;Alpine&quot;, max_elev &lt;= 3048 &amp; max_elev &gt; 2804 ~ &quot;Subalpine Forest&quot;, max_elev &lt;= 2804 &amp; max_elev &gt; 2072 ~ &quot;Mid-Elevation Forest&quot;, max_elev &lt;= 2072 &amp; max_elev &gt; 1706 ~ &quot;Foothill Shrub&quot;, max_elev &lt;=1706 &amp; max_elev &gt; 1524 ~ &quot;Front Range Fans&quot;, max_elev &lt;= 1524 ~ &quot;Plains&quot;)) %&gt;% filter(ecoregion == &quot;Alpine&quot;) %&gt;% ggplot(aes(x = BFwidth, y = Slope, color = ecoregion)) + geom_point() + scale_fill_viridis_d() + theme_minimal() + labs(title = &quot;Alpine&quot;, y = &quot;Slope&quot;, x = &quot;Bankfull width (m)&quot;, color = &quot;EcoRegion&quot;) + theme(legend.position = &quot;none&quot;) Ill do this for the rest of the ecoregions and then stack the plots: alp &lt;- reach_attributes %&gt;% filter(InNetwork == 1 &amp; MaxElevSmo &gt; 0 &amp; Slope &gt; 0 &amp; Slope &lt; 9 &amp; BFwidth &lt; 25) %&gt;% mutate(max_elev = MaxElevSmo/100) %&gt;% mutate(min_elev = MInElevSmo/100) %&gt;% mutate(ecoregion = case_when(max_elev &gt; 3048 ~ &quot;Alpine&quot;, max_elev &lt;= 3048 &amp; max_elev &gt; 2804 ~ &quot;Subalpine Forest&quot;, max_elev &lt;= 2804 &amp; max_elev &gt; 2072 ~ &quot;Mid-Elevation Forest&quot;, max_elev &lt;= 2072 &amp; max_elev &gt; 1706 ~ &quot;Foothill Shrub&quot;, max_elev &lt;=1706 &amp; max_elev &gt; 1524 ~ &quot;Front Range Fans&quot;, max_elev &lt;= 1524 ~ &quot;Plains&quot;)) %&gt;% filter(ecoregion == &quot;Alpine&quot;) %&gt;% ggplot(aes(x = BFwidth, y = Slope, color = ecoregion)) + geom_point() + xlim(0, 25) + ylim(0, 1.5) + scale_fill_viridis_d() + theme_minimal() + labs(title = &quot;Alpine&quot;, y = &quot;Slope&quot;, x = &quot;Bankfull width (m)&quot;, color = &quot;EcoRegion&quot;) + theme(legend.position = &quot;none&quot;) saf &lt;- reach_attributes %&gt;% filter(InNetwork == 1 &amp; MaxElevSmo &gt; 0 &amp; Slope &gt; 0 &amp; Slope &lt; 9 &amp; BFwidth &lt; 25) %&gt;% mutate(max_elev = MaxElevSmo/100) %&gt;% mutate(min_elev = MInElevSmo/100) %&gt;% mutate(ecoregion = case_when(max_elev &gt; 3048 ~ &quot;Alpine&quot;, max_elev &lt;= 3048 &amp; max_elev &gt; 2804 ~ &quot;Subalpine Forest&quot;, max_elev &lt;= 2804 &amp; max_elev &gt; 2072 ~ &quot;Mid-Elevation Forest&quot;, max_elev &lt;= 2072 &amp; max_elev &gt; 1706 ~ &quot;Foothill Shrub&quot;, max_elev &lt;=1706 &amp; max_elev &gt; 1524 ~ &quot;Front Range Fans&quot;, max_elev &lt;= 1524 ~ &quot;Plains&quot;)) %&gt;% filter(ecoregion == &quot;Subalpine Forest&quot;) %&gt;% ggplot(aes(x = BFwidth, y = Slope, color = ecoregion)) + geom_point() + xlim(0, 25) + ylim(0, 1.5) + scale_fill_viridis_d() + theme_minimal() + labs(title = &quot;Subalpine Forest&quot;, y = &quot;Slope&quot;, x = &quot;Bankfull width (m)&quot;, color = &quot;EcoRegion&quot;) + theme(legend.position = &quot;none&quot;) mef &lt;- reach_attributes %&gt;% filter(InNetwork == 1 &amp; MaxElevSmo &gt; 0 &amp; Slope &gt; 0 &amp; Slope &lt; 9 &amp; BFwidth &lt; 25) %&gt;% mutate(max_elev = MaxElevSmo/100) %&gt;% mutate(min_elev = MInElevSmo/100) %&gt;% mutate(ecoregion = case_when(max_elev &gt; 3048 ~ &quot;Alpine&quot;, max_elev &lt;= 3048 &amp; max_elev &gt; 2804 ~ &quot;Subalpine Forest&quot;, max_elev &lt;= 2804 &amp; max_elev &gt; 2072 ~ &quot;Mid-Elevation Forest&quot;, max_elev &lt;= 2072 &amp; max_elev &gt; 1706 ~ &quot;Foothill Shrub&quot;, max_elev &lt;=1706 &amp; max_elev &gt; 1524 ~ &quot;Front Range Fans&quot;, max_elev &lt;= 1524 ~ &quot;Plains&quot;)) %&gt;% filter(ecoregion == &quot;Mid-Elevation Forest&quot;) %&gt;% ggplot(aes(x = BFwidth, y = Slope, color = ecoregion)) + geom_point() + xlim(0, 25) + ylim(0, 1.5) + scale_fill_viridis_d() + theme_minimal() + labs(title = &quot;Mid-Elevation Forest&quot;, y = &quot;Slope&quot;, x = &quot;Bankfull width (m)&quot;, color = &quot;EcoRegion&quot;) + theme(legend.position = &quot;none&quot;) fs &lt;- reach_attributes %&gt;% filter(InNetwork == 1 &amp; MaxElevSmo &gt; 0 &amp; Slope &gt; 0 &amp; Slope &lt; 9 &amp; BFwidth &lt; 25) %&gt;% mutate(max_elev = MaxElevSmo/100) %&gt;% mutate(min_elev = MInElevSmo/100) %&gt;% mutate(ecoregion = case_when(max_elev &gt; 3048 ~ &quot;Alpine&quot;, max_elev &lt;= 3048 &amp; max_elev &gt; 2804 ~ &quot;Subalpine Forest&quot;, max_elev &lt;= 2804 &amp; max_elev &gt; 2072 ~ &quot;Mid-Elevation Forest&quot;, max_elev &lt;= 2072 &amp; max_elev &gt; 1706 ~ &quot;Foothill Shrub&quot;, max_elev &lt;=1706 &amp; max_elev &gt; 1524 ~ &quot;Front Range Fans&quot;, max_elev &lt;= 1524 ~ &quot;Plains&quot;)) %&gt;% filter(ecoregion == &quot;Foothill Shrub&quot;) %&gt;% ggplot(aes(x = BFwidth, y = Slope, color = ecoregion)) + geom_point() + xlim(0, 25) + ylim(0, 1.5) + scale_fill_viridis_d() + theme_minimal() + labs(title = &quot;Foothill Shrub&quot;, y = &quot;Slope&quot;, x = &quot;Bankfull width (m)&quot;, color = &quot;EcoRegion&quot;) + theme(legend.position = &quot;none&quot;) frf &lt;- reach_attributes %&gt;% filter(InNetwork == 1 &amp; MaxElevSmo &gt; 0 &amp; Slope &gt; 0 &amp; Slope &lt; 9 &amp; BFwidth &lt; 25) %&gt;% mutate(max_elev = MaxElevSmo/100) %&gt;% mutate(min_elev = MInElevSmo/100) %&gt;% mutate(ecoregion = case_when(max_elev &gt; 3048 ~ &quot;Alpine&quot;, max_elev &lt;= 3048 &amp; max_elev &gt; 2804 ~ &quot;Subalpine Forest&quot;, max_elev &lt;= 2804 &amp; max_elev &gt; 2072 ~ &quot;Mid-Elevation Forest&quot;, max_elev &lt;= 2072 &amp; max_elev &gt; 1706 ~ &quot;Foothill Shrub&quot;, max_elev &lt;=1706 &amp; max_elev &gt; 1524 ~ &quot;Front Range Fans&quot;, max_elev &lt;= 1524 ~ &quot;Plains&quot;)) %&gt;% filter(ecoregion == &quot;Front Range Fans&quot;) %&gt;% ggplot(aes(x = BFwidth, y = Slope, color = ecoregion)) + geom_point() + xlim(0, 25) + ylim(0, 1.5) + scale_fill_viridis_d() + theme_minimal() + labs(title = &quot;Front Range Fans&quot;, y = &quot;Slope&quot;, x = &quot;Bankfull width (m)&quot;, color = &quot;EcoRegion&quot;) + theme(legend.position = &quot;none&quot;) plns &lt;- reach_attributes %&gt;% filter(InNetwork == 1 &amp; MaxElevSmo &gt; 0 &amp; Slope &gt; 0 &amp; Slope &lt; 9 &amp; BFwidth &lt; 25) %&gt;% mutate(max_elev = MaxElevSmo/100) %&gt;% mutate(min_elev = MInElevSmo/100) %&gt;% mutate(ecoregion = case_when(max_elev &gt; 3048 ~ &quot;Alpine&quot;, max_elev &lt;= 3048 &amp; max_elev &gt; 2804 ~ &quot;Subalpine Forest&quot;, max_elev &lt;= 2804 &amp; max_elev &gt; 2072 ~ &quot;Mid-Elevation Forest&quot;, max_elev &lt;= 2072 &amp; max_elev &gt; 1706 ~ &quot;Foothill Shrub&quot;, max_elev &lt;=1706 &amp; max_elev &gt; 1524 ~ &quot;Front Range Fans&quot;, max_elev &lt;= 1524 ~ &quot;Plains&quot;)) %&gt;% filter(ecoregion == &quot;Plains&quot;) %&gt;% ggplot(aes(x = BFwidth, y = Slope, color = ecoregion)) + geom_point() + xlim(0, 25) + ylim(0, 1.5) + scale_fill_viridis_d() + theme_minimal() + labs(title = &quot;Plains&quot;, y = &quot;Slope&quot;, x = &quot;Bankfull width (m)&quot;, color = &quot;EcoRegion&quot;) + theme(legend.position = &quot;none&quot;) (alp|saf)/(mef|fs)/(frf|plns) "],["summary.html", "Chapter 6 Summary", " Chapter 6 Summary The St. Vrain Watershed is representative of many Colorado Front Range basins. Starting in protected, alpine reaches, it ends up winding through the flat to rolling plains, reaching almost 25 meters in width in some reaches. These visualizations make it easy to see how bankfull width and slope are related in different portions of the catchment. By breaking this data out by EcoRegion, interesting trends an anomalies are more apparent and can provide a jumping off point for future investigation. "]]
